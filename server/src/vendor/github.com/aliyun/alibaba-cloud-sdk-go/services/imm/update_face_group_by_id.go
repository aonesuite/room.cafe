package imm

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// UpdateFaceGroupById invokes the imm.UpdateFaceGroupById API synchronously
// api document: https://help.aliyun.com/api/imm/updatefacegroupbyid.html
func (client *Client) UpdateFaceGroupById(request *UpdateFaceGroupByIdRequest) (response *UpdateFaceGroupByIdResponse, err error) {
	response = CreateUpdateFaceGroupByIdResponse()
	err = client.DoAction(request, response)
	return
}

// UpdateFaceGroupByIdWithChan invokes the imm.UpdateFaceGroupById API asynchronously
// api document: https://help.aliyun.com/api/imm/updatefacegroupbyid.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) UpdateFaceGroupByIdWithChan(request *UpdateFaceGroupByIdRequest) (<-chan *UpdateFaceGroupByIdResponse, <-chan error) {
	responseChan := make(chan *UpdateFaceGroupByIdResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.UpdateFaceGroupById(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// UpdateFaceGroupByIdWithCallback invokes the imm.UpdateFaceGroupById API asynchronously
// api document: https://help.aliyun.com/api/imm/updatefacegroupbyid.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) UpdateFaceGroupByIdWithCallback(request *UpdateFaceGroupByIdRequest, callback func(response *UpdateFaceGroupByIdResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *UpdateFaceGroupByIdResponse
		var err error
		defer close(result)
		response, err = client.UpdateFaceGroupById(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// UpdateFaceGroupByIdRequest is the request struct for api UpdateFaceGroupById
type UpdateFaceGroupByIdRequest struct {
	*requests.RpcRequest
	Project    string `position:"Query" name:"Project"`
	SetId      string `position:"Query" name:"SetId"`
	NewGroupId string `position:"Query" name:"NewGroupId"`
	FaceIds    string `position:"Query" name:"FaceIds"`
}

// UpdateFaceGroupByIdResponse is the response struct for api UpdateFaceGroupById
type UpdateFaceGroupByIdResponse struct {
	*responses.BaseResponse
	RequestId        string                 `json:"RequestId" xml:"RequestId"`
	SetId            string                 `json:"SetId" xml:"SetId"`
	FailUpdateDetail []FailUpdateDetailItem `json:"FailUpdateDetail" xml:"FailUpdateDetail"`
	Faces            []FacesItem            `json:"Faces" xml:"Faces"`
}

// CreateUpdateFaceGroupByIdRequest creates a request to invoke UpdateFaceGroupById API
func CreateUpdateFaceGroupByIdRequest() (request *UpdateFaceGroupByIdRequest) {
	request = &UpdateFaceGroupByIdRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("imm", "2017-09-06", "UpdateFaceGroupById", "imm", "openAPI")
	return
}

// CreateUpdateFaceGroupByIdResponse creates a response to parse from UpdateFaceGroupById response
func CreateUpdateFaceGroupByIdResponse() (response *UpdateFaceGroupByIdResponse) {
	response = &UpdateFaceGroupByIdResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
